{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is",
				"is_visible"
			],
			[
				"get",
				"get_queryset"
			],
			[
				"c",
				"config"
			],
			[
				"D",
				"DjangoWhiteNoise"
			],
			[
				"block",
				"blockquote"
			],
			[
				"al",
				"alt\tAttr"
			],
			[
				"wid",
				"width\tproperty"
			],
			[
				"mar",
				"margin-left\tproperty"
			],
			[
				"user",
				"user__username"
			],
			[
				"s",
				"self"
			],
			[
				"re",
				"request"
			],
			[
				"cur",
				"current_profile_diries"
			],
			[
				"fo",
				"followed_profiles_diaries"
			],
			[
				"H",
				"Http403"
			],
			[
				"w",
				"written_diaries"
			],
			[
				"di",
				"display"
			],
			[
				"nav",
				"navbar"
			],
			[
				"page",
				"page-link"
			],
			[
				"pa",
				"page-link"
			],
			[
				"h",
				"h3\tTag"
			],
			[
				"op",
				"option\tTag"
			],
			[
				"yes",
				"yesornono"
			],
			[
				"ye",
				"yesorno"
			],
			[
				"cus",
				"custom-control"
			],
			[
				"l",
				"label\tTag"
			],
			[
				"form",
				"form-control"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"co",
				"col-md-4"
			],
			[
				"pr",
				"progress-bar"
			],
			[
				"bt",
				"btn-group"
			],
			[
				"th",
				"thead\tTag"
			],
			[
				"i",
				"important"
			],
			[
				"dia",
				"diaries"
			],
			[
				"P",
				"Profile"
			],
			[
				"for",
				"forms"
			],
			[
				"like",
				"likes_count"
			],
			[
				"lik",
				"liked_diaries"
			],
			[
				"M",
				"MALE"
			],
			[
				"li",
				"likeForm"
			],
			[
				"fun",
				"function"
			],
			[
				"Da",
				"DateTimeField"
			],
			[
				"ti",
				"timedelta"
			],
			[
				"com",
				"comment_likes"
			],
			[
				"mi",
				"min-height\tproperty"
			],
			[
				"p",
				"padding\tproperty"
			],
			[
				"ma",
				"material-icons"
			],
			[
				"onc",
				"onclick\tAttr"
			],
			[
				"btn-",
				"btn-floating"
			],
			[
				"dro",
				"dropdown-trigger"
			],
			[
				"Com",
				"CommentForm"
			],
			[
				"diary",
				"diary_slug"
			],
			[
				"slug",
				"slug"
			],
			[
				"C",
				"CommentForm"
			],
			[
				"sl",
				"slug_url_kwarg"
			],
			[
				"ge",
				"get_object_or_404"
			],
			[
				"diar",
				"diary"
			],
			[
				"mo",
				"model"
			],
			[
				"ac",
				"action\tAttr"
			],
			[
				"Di",
				"DiaryForm"
			],
			[
				"u",
				"ul\tTag"
			],
			[
				"cr",
				"create_profile_on_user_creation"
			],
			[
				"au",
				"auth_views"
			],
			[
				"fi",
				"file_extention"
			],
			[
				"use",
				"username"
			],
			[
				"aut",
				"auto_now_add"
			],
			[
				"on",
				"on_delete"
			],
			[
				"F",
				"ForeignKey"
			],
			[
				"se",
				"self"
			],
			[
				"ch",
				"chars"
			],
			[
				"bl",
				"block_string"
			],
			[
				"has",
				"hashlib"
			],
			[
				"pre",
				"previous_hash"
			],
			[
				"tr",
				"transaction"
			],
			[
				"new",
				"new_block"
			],
			[
				"amo",
				"amount"
			],
			[
				"slu",
				"slugify"
			],
			[
				"la",
				"latest_community_id"
			],
			[
				"Comm",
				"communities"
			],
			[
				"ob",
				"objects"
			],
			[
				"me",
				"meta\tTag"
			],
			[
				"site",
				"sitemaps"
			],
			[
				"act",
				"actors_name"
			],
			[
				"d",
				"director"
			],
			[
				"ca",
				"cast"
			],
			[
				"m",
				"movie_model"
			],
			[
				"cat",
				"category"
			],
			[
				"len",
				"length"
			],
			[
				"le",
				"length"
			],
			[
				"ima",
				"image_name"
			],
			[
				"image",
				"image_name"
			],
			[
				"a",
				"actor"
			],
			[
				"ra",
				"random_string"
			],
			[
				"t",
				"type\tAttr"
			],
			[
				"mov",
				"movie_form"
			],
			[
				"ur",
				"urlpatterns"
			],
			[
				"im",
				"imdb_rating"
			],
			[
				"de",
				"description"
			],
			[
				"L",
				"LanguageAdmin"
			],
			[
				"T",
				"TimestampModel"
			],
			[
				"G",
				"Game"
			],
			[
				"ga",
				"game_category"
			],
			[
				"r",
				"release_date"
			],
			[
				"Po",
				"PropertiesItem"
			],
			[
				"comm",
				"comment"
			],
			[
				"po",
				"post_slug"
			],
			[
				"ord",
				"ordering"
			],
			[
				"modu",
				"modules"
			],
			[
				"Mo",
				"Model"
			],
			[
				"f",
				"followed_users"
			],
			[
				"ass",
				"assertQuerysetEqual"
			],
			[
				"que",
				"question_text"
			],
			[
				"create",
				"create_question"
			],
			[
				"qu",
				"question_text"
			],
			[
				"ques",
				"question"
			],
			[
				"K",
				"kirr_url"
			],
			[
				"ki",
				"kirr_url"
			],
			[
				"sh",
				"short_code"
			],
			[
				"I",
				"ItemCreateView"
			],
			[
				"It",
				"ItemUpdateView"
			],
			[
				"ne",
				"next_page"
			],
			[
				"lo",
				"login_required"
			],
			[
				"R",
				"RestaurantLocation"
			],
			[
				"pag",
				"paginator"
			],
			[
				"ex",
				"extention"
			],
			[
				"fu",
				"full_path"
			],
			[
				"A",
				"ActorAdmin"
			],
			[
				"categories",
				"categorie_list"
			],
			[
				"n",
				"nav\tTag"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from django.contrib.auth.mixins import LoginRequiredMixin\nfrom django.http import Http404\nfrom django.shortcuts import render, get_object_or_404, redirect\nfrom django.views.generic import View, ListView, DetailView, DeleteView, UpdateView, CreateView\nfrom django.urls import reverse\n\nfrom .forms import DiaryForm, CommentForm\nfrom .models import Diary, DiaryLike, Comment, CommentLike\n\n\nDIARIES_PER_PAGE = 9\n\nclass DiaryListView(ListView):\n\tmodel = Diary\n\tpaginate_by = DIARIES_PER_PAGE\n\ttemplate_name = 'diaries/diary_list.html'\n\tcontext_object_name = 'diaries'\n\torder_by = None\n\n\tdef get_queryset(self):\n\t\torder_by = self.order_by\n\t\tif order_by == 'popularity':\n\t\t\tqs = self.model.objects.popular()\n\t\telif order_by == 'discover':\n\t\t\tqs = self.model.objects.with_likes_and_comments_count()\n\t\telse:\n\t\t\tif self.request.user.is_authenticated:\n\t\t\t\t# User will only see the diaries of people he follow + his own \n\t\t\t\tfollowed_profiles_diaries = Diary.objects.from_followed_profiles(self.request.user.profile).order_by()\n\t\t\t\tcurrent_profile_diaries = Diary.objects.with_likes_and_comments_count().filter(author=self.request.user.profile).order_by()\n\t\t\t\tqs = followed_profiles_diaries.union(current_profile_diaries).order_by('-created_on')\n\t\t\telse:\n\t\t\t\tqs = self.model.objects.with_likes_and_comments_count()\n\t\treturn qs\n\nclass DiaryDetailView(DetailView):\n\tmodel = Diary\n\ttemplate_name = 'diaries/diary_detail.html'\n\tcontext_object_name = 'diary'\n\tslug_field = 'slug'\n\tslug_url_kwarg = 'diary_slug'\n\n\tdef get_queryset(self):\n\t\tqs = self.model.objects.with_likes_and_comments_count()\n\t\treturn qs\n\n\tdef get_context_data(self, **kwargs):\n\t\tcx =  super(DiaryDetailView, self).get_context_data(**kwargs)\n\n\t\tcomment_form = CommentForm()\n\t\tcx['comment_form'] = comment_form\n\n\t\tcurrent_user_likes_diary = False\n\t\tif self.request.user.is_authenticated:\n\t\t\tif self.request.user.profile in self.object.likes.all():\n\t\t\t\tcurrent_user_likes_diary = True\n\t\tcx['current_user_likes_diary'] = current_user_likes_diary\n\t\tprint(cx)\n\n\t\treturn cx\n\nclass DiaryCreateView(LoginRequiredMixin, CreateView):\n\tform_class = DiaryForm\n\ttemplate_name = 'diaries/diary_create.html'\n\tcontext_object_name = 'diary'\n\n\tdef get_success_url(self):\n\t\treturn self.object.get_absolute_url()\n\n\tdef form_valid(self, form):\n\t\tform.instance.author = self.request.user.profile\n\t\treturn super().form_valid(form)\n\nclass DiaryUpdateView(LoginRequiredMixin, UpdateView):\n\tmodel = Diary\n\tform_class = DiaryForm\n\ttemplate_name = 'diaries/diary_update.html'\n\tslug_url_kwarg = 'diary_slug'\n\tcontext_object_name = 'diary'\n\n\tdef get_success_url(self):\n\t\treturn self.object.get_absolute_url()\n\n\tdef get_object(self):\n\t\tobj = get_object_or_404(self.model, slug=self.kwargs[self.slug_url_kwarg])\n\t\tif self.request.user.profile == obj.author:\n\t\t\treturn obj\n\t\traise Http404()\n\nclass DiaryDeleteView(LoginRequiredMixin, DeleteView):\n\tmodel = Diary\n\ttemplate_name = 'diaries/diary_delete.html'\n\tslug_field = 'slug'\n\tslug_url_kwarg = 'diary_slug'\n\n\tdef get_success_url(self):\n\t\treturn reverse('diaries:diary_list')\n\n\tdef get_object(self):\n\t\tobj = get_object_or_404(self.model, slug=self.kwargs[self.slug_url_kwarg])\n\t\tif self.request.user.profile == obj.author:\n\t\t\treturn obj\n\t\traise Http404()\n\nclass DiaryLikeView(LoginRequiredMixin, View):\n\tdef get(self, request, diary_slug):\n\t\tdiary = get_object_or_404(Diary, slug=diary_slug)\n\t\treturn redirect(diary)\n\n\tdef post(self, request, diary_slug):\n\t\tdiary = get_object_or_404(Diary, slug=diary_slug)\n\t\t# if request.user.profile in diary.likes.all():\n\t\t# \tdiary.likes.remove(request.user.profile)\n\t\t# else:\n\t\t# \tdiary.likes.add(request.user.profile)\n\t\tdl, created = DiaryLike.objects.get_or_create(diary=diary, user=request.user.profile)\n\t\tif not created:\n\t\t\tdl.delete()\n\t\treturn redirect(diary)\n\n\nclass CommentCreateView(LoginRequiredMixin, View):\n\tform_class = CommentForm\n\n\tdef get(self, *args, **kwargs):\n\t\tdiary = get_object_or_404(Diary, slug=self.kwargs['diary_slug'])\n\t\treturn redirect(diary)\n\n\tdef post(self, *args, **kwargs):\n\t\tdiary = get_object_or_404(Diary, slug=self.kwargs['diary_slug'], is_visible=True, is_commentable=True)\n\t\tcomment_form = CommentForm(self.request.POST)\n\t\tif comment_form.is_valid():\n\t\t\tnew_comment = comment_form.save(commit=False)\n\t\t\tnew_comment.author = self.request.user.profile\n\t\t\tnew_comment.diary = diary\n\t\t\tnew_comment.save()\n\t\t\treturn redirect(diary)\n\t\telse:\n\t\t\treturn redirect(diary)\n\nclass CommentDeleteView(LoginRequiredMixin, DeleteView):\n\tmodel = Comment\n\ttemplate_name = 'diaries/comment_delete.html'\n\tdiary_slug_url_kwarg = 'diary_slug'\n\tcomment_id_url_kwarg = 'comment_id'\n\n\tdef get_success_url(self):\n\t\tdiary = get_object_or_404(Diary, slug=self.kwargs[self.diary_slug_url_kwarg])\n\t\treturn diary.get_absolute_url()\n\n\tdef get_object(self):\n\t\tobj = get_object_or_404(self.model, id=self.kwargs[self.comment_id_url_kwarg])\n\t\tif self.request.user.profile == obj.author:\n\t\t\treturn obj\n\t\traise Http404()",
			"file": "diaries/views.py",
			"file_size": 5098,
			"file_write_time": 131922218382296695,
			"settings":
			{
				"buffer_size": 4927,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pac",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/omar/Documents/Dev/Django/yawm",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/snippets",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/snippets",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/settings"
	],
	"file_history":
	[
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_detail.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/models.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/views.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/requirements.txt",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/settings/prod.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/settings/dev.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/manage.py",
		"/C/Users/omar/Documents/Dev/Django/tweets/tweets/settings.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/runtime.txt",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/settings/base.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/settings/__init__.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/settings/base.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/settings/dev.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/settings/prod.py",
		"/C/Users/omar/Documents/Dev/Django/shop/shop/settings.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_create.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/snippets/profile_snippet.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/snippets/diary_list_snippet.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/.gitignore",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/comment_delete.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_delete.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/Procfile",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/wsgi.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/core/static/core/css/main.css",
		"/C/Users/omar/Documents/Dev/Django/yawm/templates/base.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/settings.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/yawm/urls.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/forms.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/core/templates/core/snippets/form_fields.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/core/static/core/js/main.js",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_list_discover.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_list.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/static/css/summernote-bs4.css",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/urls.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/views.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/login.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/signup.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/profile_update.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/forms.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/models.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/urls.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/profile_list.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/profile_detail.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/home.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/base_diaries.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/templates/accounts/base_accounts.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_update.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/static/diaries/css/main.css",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/admin.py",
		"/C/Users/omar/Documents/Dev/Bootstrap/tutorial/index.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/static/diaries/js/main.js",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/templates/diaries/diary_list_popular.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/core/utils.py",
		"/D/Downloads/Compressed/index.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/core/__init__.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/accounts/migrations/0002_auto_20181230_1812.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/migrations/0001_initial.py",
		"/C/Users/omar/Documents/ffff.html",
		"/D/Downloads/Compressed/materialize/css/icons.css",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/static/css/main.css",
		"/C/Users/omar/Documents/Dev/Django/yawm/static/css/icons.css",
		"/C/Users/omar/Documents/Dev/Django/myfilm/main_app/templates/main_app/movie/list.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/sbbbbbbbb.html",
		"/D/Downloads/WebPage/اليوميات - يومي.html",
		"/C/Users/omar/Documents/Dev/Django/blueblog/blog/templates/blog/blog_list.html",
		"/C/Users/omar/Documents/Dev/Django/myfilm/main_app/templates/main_app/snippets/movie_list_snippet.html",
		"/D/Downloads/Compressed/materialize/index.html",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/admin.py",
		"/C/Users/omar/Documents/Dev/Django/yawm/diaries/utils.py",
		"/C/Users/omar/Documents/Cheat Sheat/DJANGO 2.txt",
		"/C/Users/omar/Documents/Cheat Sheat/DJANGO.txt",
		"/C/Program Files/Python37/Lib/site-packages/django/contrib/auth/forms.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/templates/base.html",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/__init__.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/templates/forum/base_forum.html",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/models.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/utils.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/admin.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/views.py",
		"/D/Downloads/WebPage/Yawm.me/stay alive! - يومي_files/min.css",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/templates/forum/post_list.html",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/forum/urls.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/hsoubio/urls.py",
		"/C/Users/omar/Documents/Dev/Django/hsoubio/hsoubio/settings.py",
		"/D/Documents/Lab/Py/blockchain.py",
		"/C/xampp/apache/conf/httpd.conf",
		"/D/Documents/Django/hsoubio/forum/models.py",
		"/C/Users/omar/Documents/Django/myaflam/main_app/views.py",
		"/C/Users/omar/Downloads/FireShot/codingforentrepreneurs/Create a Blank Django Project _ Coding For Entrepreneurs.html",
		"/C/Users/omar/Documents/Django/myaflam/.gitignore",
		"/C/Users/omar/Desktop/Cheat Sheat/Javascript.js",
		"/C/Users/omar/Desktop/Cheat Sheat/Javascript.txt",
		"/C/Users/omar/Documents/Django/myaflam/main_app/sitemaps.py",
		"/C/Users/omar/Desktop/Cheat Sheat/DJANGO 2.txt",
		"/C/Users/omar/Documents/Django/myaflam/myaflam/settings.py",
		"/C/Users/omar/Documents/Django/myaflam/myaflam/urls.py",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/category/list.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/actor/list.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/actor/detail.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/category/detail.html",
		"/C/Users/omar/Documents/Django/myaflam/meta.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/base_main_app.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/movie/list.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/movie/detail.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/snippets/category_list_snippet.html",
		"/C/Users/omar/Documents/Django/myaflam/shell/assign_actor_2_movies_2.py",
		"/C/Users/omar/Documents/Django/myaflam/MoviesFull.csv",
		"/C/Users/omar/Documents/Django/myaflam/main_app/models.py",
		"/C/Users/omar/Desktop/Cheat Sheat/PYTHON.txt",
		"/C/Users/omar/Documents/Django/myaflam/shell/add_movies_shell.py",
		"/C/Users/omar/Documents/Django/myaflam/shell/add_categories_and_assign_2_movies_2.py",
		"/C/Users/omar/Documents/Django/myaflam/templates/base.html",
		"/C/Users/omar/Documents/Django/myaflam/shell/add_actors_shell.py",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/search/movies.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/snippets/actor_list_snippet.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/snippets/movie_list_snippet.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/templates/main_app/search/actors.html",
		"/C/Users/omar/Documents/Django/myaflam/main_app/admin.py",
		"/C/Users/omar/Documents/Django/myaflam/Movies.csv",
		"/C/Users/omar/Documents/Django/myaflam/Casts.csv",
		"/C/Users/omar/Documents/Django/myaflam/shell/assign_actor_2_movies.py",
		"/C/Users/omar/Documents/Django/myaflam/shell/add_categories_and_assign_2_movies_shell.py",
		"/C/Users/omar/Documents/Django/myaflam/myfilm/wsgi.py",
		"/C/Users/omar/Documents/Django/myaflam/myfilm/urls.py",
		"/C/Users/omar/Documents/Django/myaflam/manage.py",
		"/C/Users/omar/Documents/Django/myaflam/myfilm/settings.py",
		"/C/Users/omar/Documents/Django/myaflam/main_app/utils.py",
		"/C/Users/omar/Documents/Django/myaflam/debug.txt"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 99.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"profile",
			"trash",
			"share",
			"person",
			"people",
			"edit",
			"aria-hidden=\"true\">",
			"-hidden=\"true\">",
			"fire",
			"glyph",
			"gylph",
			"SummernoteInplaceWidget",
			"SummernoteWidget",
			"ht",
			"http",
			"summernote",
			"Popular",
			"popular",
			"h3",
			"span",
			"b",
			"pub_date",
			"5",
			"self.request.user.profile",
			"navbar-expand-",
			"current_profile_diries",
			"self.request",
			"self.kwargs[self.slug_url_kwarg]",
			"self",
			"100",
			"50",
			"Http403",
			"Update",
			"List",
			"5",
			"Diaries",
			"h5",
			"diary.author",
			"dia",
			"Home",
			"written_diaries",
			"diary.pub_date",
			"diaries",
			"{%",
			"user",
			"ct",
			"pub",
			"card-deck",
			"2",
			"h4",
			"s2",
			"col-",
			"!\"",
			"</li>",
			"<li>",
			"span",
			"ul",
			"span",
			"p",
			"responsive-img",
			"#!\"",
			"</li>",
			"<li>",
			"span",
			"col m4",
			"5",
			" mr-auto",
			"col-md-1",
			"\">",
			"\t\t\t\t\t\t\t\t\t</li>\n",
			"\t\t\t\t\t\t\t\t\t<li class=\"dropdown-item\">\n",
			"ul",
			"<li",
			" class=\"nav-link\"",
			"a href",
			"li class=\"co",
			"li class=\"",
			"offset-",
			"col ",
			" btn-danger",
			"em active",
			" class=\"active\"",
			"ata-tar",
			"carousel-item",
			" custom-control-inline",
			"checkbox",
			" id=\"yesorno\"",
			" for=\"yesorno\"",
			"label",
			"custom-checkbox",
			"form-check",
			"\" class=\"form-check-label\"",
			"gender",
			"form-group form-check-inline",
			"lname",
			"range",
			"fname",
			"a class=\"nav-li",
			" class=\"breadcrumb-link\"",
			"page",
			"ml-1",
			"danger",
			"warning",
			"Small",
			"small",
			"Small",
			"small",
			"Small",
			"small",
			"1",
			"diary.author",
			"slugify",
			"2",
			"login",
			"Login",
			"form.subject",
			"self",
			"Excited",
			"excited",
			"MALE",
			"get_diary_image_upload_path",
			"jpg\"",
			"src=",
			"<br />\n",
			"\" /><br />",
			"<img alt=\"Multifunctional Stripper Plier Crimper M3-400pcs Cold Pressing Electrical Wire Terminal Sets Orange\"",
			" src=\"https://img.staticbg.com/newimages/grey.gif\"",
			"data-original"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "diaries/views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4927,
						"regions":
						{
						},
						"selection":
						[
							[
								3145,
								3145
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 621.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 130.0
	},
	"pinned_build_system": "",
	"project": "yawm_.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/etc/php5/apache2/php.ini"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 217.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
